language: python
dist: trusty
env:
    global:
        - TOXENV=py27

        - DOCKER_REGISTRY_ICR=us.icr.io
        - DOCKER_USER_ICR=iamapikey
        - DOCKER_DOMAIN_ICR=$DOCKER_REGISTRY_ICR/git-defenders

        - DOCKER_REGISTRY_ART=txo-toolbox-team-docker-local.artifactory.swg-devops.com
        - DOCKER_USER_ART=dssadmin@us.ibm.com
        - DOCKER_DOMAIN_ART=$DOCKER_REGISTRY_ART/git-defenders

        - DOCKER_REMOTE_DOMAINS="$DOCKER_DOMAIN_ICR $DOCKER_DOMAIN_ART"
        - DOCKER_IMAGES="dsl detect-secrets detect-secrets-hook"
        - DOCKER_DOMAIN_LOCAL=git-defenders
        - DOCKER_IMAGE_TAG="$TRAVIS_BUILD_NUMBER-id-$TRAVIS_BUILD_ID-time-$(date +%s)"
        - DOCKER_IMAGE_TAG_DSS="$TRAVIS_BRANCH-$TRAVIS_BUILD_NUMBER-id-$TRAVIS_BUILD_ID-time-$(date +%s)"
deploy:
- provider: script
  # dpl would concatenate all lines into single string
  script: >-
        set -e;
        echo ${IBM_CLOUD_API_KEY} | docker login -u $DOCKER_USER_ICR --password-stdin $DOCKER_REGISTRY_ICR;
        echo ${ART_API_KEY} | docker login -u $DOCKER_USER_ART --password-stdin $DOCKER_REGISTRY_ART;
        ./tag-and-publish.sh "$DOCKER_IMAGES" "$DOCKER_DOMAIN_LOCAL" "$DOCKER_REMOTE_DOMAINS" "$DOCKER_IMAGE_TAG latest";
  on:
      branch: master
- provider: script
  # dpl would concatenate all lines into single string
  script: >-
        set -e;
        echo ${IBM_CLOUD_API_KEY} | docker login -u $DOCKER_USER_ICR --password-stdin $DOCKER_REGISTRY_ICR;
        echo ${ART_API_KEY} | docker login -u $DOCKER_USER_ART --password-stdin $DOCKER_REGISTRY_ART;
        ./tag-and-publish.sh "$DOCKER_IMAGES" "$DOCKER_DOMAIN_LOCAL" "$DOCKER_REMOTE_DOMAINS" "$DOCKER_IMAGE_TAG_DSS dss-latest";
  on:
      branch: dss
matrix:
    include:
        - env: TOXENV=py27
          python: 2.7
        - env: TOXENV=py35
          python: 3.5
        - env: TOXENV=py36
          python: 3.6
        - env: TOXENV=py37
          python: 3.7
          dist: xenial  # required for Python >= 3.7 (travis-ci/travis-ci#9069)
        # - env: TOXENV=pypy
        #   python: pypy
install:
    - pip install tox
# normal script supports multiple line syntax
script: |
      set -e
      make test
      ./build-dockerfiles.sh

      # Publish image and labled with tag when a git tag is pushed
      if [ -n "$TRAVIS_TAG" ]; then
        echo ${IBM_CLOUD_API_KEY} | docker login -u $DOCKER_USER_ICR --password-stdin $DOCKER_REGISTRY_ICR
        echo ${ART_API_KEY} | docker login -u $DOCKER_USER_ART --password-stdin $DOCKER_REGISTRY_ART

        # replace + with .
        VERSION_TAG=$(tr '+' '.' <<<"$TRAVIS_TAG")
        ./tag-and-publish.sh "$DOCKER_IMAGES" "$DOCKER_DOMAIN_LOCAL" "$DOCKER_REMOTE_DOMAINS" "$VERSION_TAG"

        pip install requests packaging
        should_update=$(python scripts/version_greater_than_in_cos.py "$TRAVIS_TAG")
        if [ "$should_update" == "yes" ]
        then
          # install ibmcloud cli
          curl -sL https://raw.githubusercontent.com/IBM-Cloud/ibm-cloud-developer-tools/master/linux-installer/idt-installer | bash
          # login to ibm cloud
          ibmcloud login --apikey ${IBM_CLOUD_API_KEY} -a https://cloud.ibm.com -r us-south -g whitewater-detect-secrets
          # update latest version in ibmcloud object storage
          echo $TRAVIS_TAG > version.txt
          ibmcloud cos put-object --bucket detect-secrets-client-version --key version --body version.txt --region us-south
        fi
      fi
cache:
    directories:
        - $HOME/.cache/pre-commit
services:
    - docker
